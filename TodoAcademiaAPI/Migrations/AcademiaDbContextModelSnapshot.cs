// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TodoAcademiaAPI.Data;

namespace TodoAcademiaAPI.Migrations
{
    [DbContext(typeof(AcademiaDbContext))]
    partial class AcademiaDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.17")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("AlunoUsuarioExercicio", b =>
                {
                    b.Property<int>("AlunosIdAlunoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("ExerciciosIdExercicio")
                        .HasColumnType("int");

                    b.HasKey("AlunosIdAlunoUsuario", "ExerciciosIdExercicio");

                    b.HasIndex("ExerciciosIdExercicio");

                    b.ToTable("AlunoUsuarioExercicio");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.AlunoUsuario", b =>
                {
                    b.Property<int>("IdAlunoUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("IdProfessorUsuario")
                        .HasColumnType("int");

                    b.Property<int?>("ProfessorIdProfessorUsuario")
                        .HasColumnType("int");

                    b.HasKey("IdAlunoUsuario");

                    b.HasIndex("ProfessorIdProfessorUsuario");

                    b.ToTable("Alunos");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.Exercicio", b =>
                {
                    b.Property<int>("IdExercicio")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Descricao")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Nome")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Serie")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdExercicio");

                    b.ToTable("Exercicios");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.Pessoa", b =>
                {
                    b.Property<int>("IdPessoa")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoIdAlunoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("Cep")
                        .HasColumnType("int");

                    b.Property<string>("Complemento")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Cpf")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataNascimento")
                        .HasColumnType("datetime2");

                    b.Property<int>("IdAlunoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdProfessorUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Logradouro")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NomeCompleto")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("ProfessorIdProfessorUsuario")
                        .HasColumnType("int");

                    b.Property<string>("Rua")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("Status")
                        .HasColumnType("bit");

                    b.Property<string>("Tipo")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPessoa");

                    b.HasIndex("AlunoIdAlunoUsuario");

                    b.HasIndex("ProfessorIdProfessorUsuario");

                    b.ToTable("Pessoas");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.ProfessorUsuario", b =>
                {
                    b.Property<int>("IdProfessorUsuario")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("TarefaSemanalIdTarefaSemanal")
                        .HasColumnType("int");

                    b.HasKey("IdProfessorUsuario");

                    b.HasIndex("TarefaSemanalIdTarefaSemanal");

                    b.ToTable("Professores");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.TarefaSemanal", b =>
                {
                    b.Property<int>("IdTarefaSemanal")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int?>("AlunoIdAlunoUsuario")
                        .HasColumnType("int");

                    b.Property<DateTime>("DataFim")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DataInicio")
                        .HasColumnType("datetime2");

                    b.Property<int?>("ExercicioIdExercicio")
                        .HasColumnType("int");

                    b.Property<int>("IdAlunoUsuario")
                        .HasColumnType("int");

                    b.Property<int>("IdExercicio")
                        .HasColumnType("int");

                    b.HasKey("IdTarefaSemanal");

                    b.HasIndex("AlunoIdAlunoUsuario");

                    b.HasIndex("ExercicioIdExercicio");

                    b.ToTable("TarefasSemanais");
                });

            modelBuilder.Entity("AlunoUsuarioExercicio", b =>
                {
                    b.HasOne("TodoAcademiaAPI.Models.AlunoUsuario", null)
                        .WithMany()
                        .HasForeignKey("AlunosIdAlunoUsuario")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("TodoAcademiaAPI.Models.Exercicio", null)
                        .WithMany()
                        .HasForeignKey("ExerciciosIdExercicio")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.AlunoUsuario", b =>
                {
                    b.HasOne("TodoAcademiaAPI.Models.ProfessorUsuario", "Professor")
                        .WithMany("Alunos")
                        .HasForeignKey("ProfessorIdProfessorUsuario");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.Pessoa", b =>
                {
                    b.HasOne("TodoAcademiaAPI.Models.AlunoUsuario", "Aluno")
                        .WithMany("Pessoas")
                        .HasForeignKey("AlunoIdAlunoUsuario");

                    b.HasOne("TodoAcademiaAPI.Models.ProfessorUsuario", "Professor")
                        .WithMany()
                        .HasForeignKey("ProfessorIdProfessorUsuario");

                    b.Navigation("Aluno");

                    b.Navigation("Professor");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.ProfessorUsuario", b =>
                {
                    b.HasOne("TodoAcademiaAPI.Models.TarefaSemanal", null)
                        .WithMany("Professores")
                        .HasForeignKey("TarefaSemanalIdTarefaSemanal");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.TarefaSemanal", b =>
                {
                    b.HasOne("TodoAcademiaAPI.Models.AlunoUsuario", "Aluno")
                        .WithMany("Tarefas")
                        .HasForeignKey("AlunoIdAlunoUsuario");

                    b.HasOne("TodoAcademiaAPI.Models.Exercicio", "Exercicio")
                        .WithMany("Tarefas")
                        .HasForeignKey("ExercicioIdExercicio");

                    b.Navigation("Aluno");

                    b.Navigation("Exercicio");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.AlunoUsuario", b =>
                {
                    b.Navigation("Pessoas");

                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.Exercicio", b =>
                {
                    b.Navigation("Tarefas");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.ProfessorUsuario", b =>
                {
                    b.Navigation("Alunos");
                });

            modelBuilder.Entity("TodoAcademiaAPI.Models.TarefaSemanal", b =>
                {
                    b.Navigation("Professores");
                });
#pragma warning restore 612, 618
        }
    }
}
